# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from internlm.param_server.proto import master_pb2 as master__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in master_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ControlFlowServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PSHeartbeat = channel.unary_unary(
                '/controlflow.ControlFlowService/PSHeartbeat',
                request_serializer=master__pb2.PSHeartbeatRequest.SerializeToString,
                response_deserializer=master__pb2.PSHeartbeatResponse.FromString,
                _registered_method=True)
        self.ClientHeartbeat = channel.unary_unary(
                '/controlflow.ControlFlowService/ClientHeartbeat',
                request_serializer=master__pb2.ClientHeartbeatRequest.SerializeToString,
                response_deserializer=master__pb2.ClientHeartbeatResponse.FromString,
                _registered_method=True)
        self.UpdatePushStatus = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdatePushStatus',
                request_serializer=master__pb2.UpdatePushStatusRequest.SerializeToString,
                response_deserializer=master__pb2.UpdatePushStatusResponse.FromString,
                _registered_method=True)
        self.UpdateComputeStatus = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdateComputeStatus',
                request_serializer=master__pb2.UpdateComputeStatusRequest.SerializeToString,
                response_deserializer=master__pb2.UpdateComputeStatusResponse.FromString,
                _registered_method=True)
        self.QueryComputeStatus = channel.unary_unary(
                '/controlflow.ControlFlowService/QueryComputeStatus',
                request_serializer=master__pb2.QueryComputeStatusRequest.SerializeToString,
                response_deserializer=master__pb2.QueryComputeStatusResponse.FromString,
                _registered_method=True)
        self.UpdatePullStatus = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdatePullStatus',
                request_serializer=master__pb2.UpdatePullStatusRequest.SerializeToString,
                response_deserializer=master__pb2.UpdatePullStatusResponse.FromString,
                _registered_method=True)
        self.UpdateClientCkpt = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdateClientCkpt',
                request_serializer=master__pb2.UpdateClientCkptRequest.SerializeToString,
                response_deserializer=master__pb2.UpdateClientCkptResponse.FromString,
                _registered_method=True)
        self.UpdateClientWeightFactor = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdateClientWeightFactor',
                request_serializer=master__pb2.UpdateClientWeightFactorRequest.SerializeToString,
                response_deserializer=master__pb2.UpdateClientWeightFactorResponse.FromString,
                _registered_method=True)
        self.UpdateNormStatus = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdateNormStatus',
                request_serializer=master__pb2.UpdateNormStatusRequest.SerializeToString,
                response_deserializer=master__pb2.UpdateNormStatusResponse.FromString,
                _registered_method=True)
        self.UpdatePSNorm = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdatePSNorm',
                request_serializer=master__pb2.UpdatePSNormRequest.SerializeToString,
                response_deserializer=master__pb2.UpdatePSNormResponse.FromString,
                _registered_method=True)
        self.QueryGlobalStatus = channel.unary_unary(
                '/controlflow.ControlFlowService/QueryGlobalStatus',
                request_serializer=master__pb2.QueryGlobalStatusRequest.SerializeToString,
                response_deserializer=master__pb2.QueryGlobalStatusResponse.FromString,
                _registered_method=True)
        self.UpdateMetricLine = channel.unary_unary(
                '/controlflow.ControlFlowService/UpdateMetricLine',
                request_serializer=master__pb2.UpdateMetricLineRequest.SerializeToString,
                response_deserializer=master__pb2.UpdateMetricLineResponse.FromString,
                _registered_method=True)


class ControlFlowServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PSHeartbeat(self, request, context):
        """heartbeat bewteen ps and master
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClientHeartbeat(self, request, context):
        """heartbeat bewteen training worker and master
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePushStatus(self, request, context):
        """client update push status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateComputeStatus(self, request, context):
        """ps update computing status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryComputeStatus(self, request, context):
        """client query whether ps finish computing weight
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePullStatus(self, request, context):
        """client access master to update pull status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClientCkpt(self, request, context):
        """client pull ckpt for resume
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClientWeightFactor(self, request, context):
        """client report weight factor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNormStatus(self, request, context):
        """ps update norm status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePSNorm(self, request, context):
        """ps report group norm
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryGlobalStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMetricLine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ControlFlowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PSHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.PSHeartbeat,
                    request_deserializer=master__pb2.PSHeartbeatRequest.FromString,
                    response_serializer=master__pb2.PSHeartbeatResponse.SerializeToString,
            ),
            'ClientHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.ClientHeartbeat,
                    request_deserializer=master__pb2.ClientHeartbeatRequest.FromString,
                    response_serializer=master__pb2.ClientHeartbeatResponse.SerializeToString,
            ),
            'UpdatePushStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePushStatus,
                    request_deserializer=master__pb2.UpdatePushStatusRequest.FromString,
                    response_serializer=master__pb2.UpdatePushStatusResponse.SerializeToString,
            ),
            'UpdateComputeStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateComputeStatus,
                    request_deserializer=master__pb2.UpdateComputeStatusRequest.FromString,
                    response_serializer=master__pb2.UpdateComputeStatusResponse.SerializeToString,
            ),
            'QueryComputeStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryComputeStatus,
                    request_deserializer=master__pb2.QueryComputeStatusRequest.FromString,
                    response_serializer=master__pb2.QueryComputeStatusResponse.SerializeToString,
            ),
            'UpdatePullStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePullStatus,
                    request_deserializer=master__pb2.UpdatePullStatusRequest.FromString,
                    response_serializer=master__pb2.UpdatePullStatusResponse.SerializeToString,
            ),
            'UpdateClientCkpt': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClientCkpt,
                    request_deserializer=master__pb2.UpdateClientCkptRequest.FromString,
                    response_serializer=master__pb2.UpdateClientCkptResponse.SerializeToString,
            ),
            'UpdateClientWeightFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClientWeightFactor,
                    request_deserializer=master__pb2.UpdateClientWeightFactorRequest.FromString,
                    response_serializer=master__pb2.UpdateClientWeightFactorResponse.SerializeToString,
            ),
            'UpdateNormStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNormStatus,
                    request_deserializer=master__pb2.UpdateNormStatusRequest.FromString,
                    response_serializer=master__pb2.UpdateNormStatusResponse.SerializeToString,
            ),
            'UpdatePSNorm': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePSNorm,
                    request_deserializer=master__pb2.UpdatePSNormRequest.FromString,
                    response_serializer=master__pb2.UpdatePSNormResponse.SerializeToString,
            ),
            'QueryGlobalStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryGlobalStatus,
                    request_deserializer=master__pb2.QueryGlobalStatusRequest.FromString,
                    response_serializer=master__pb2.QueryGlobalStatusResponse.SerializeToString,
            ),
            'UpdateMetricLine': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMetricLine,
                    request_deserializer=master__pb2.UpdateMetricLineRequest.FromString,
                    response_serializer=master__pb2.UpdateMetricLineResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'controlflow.ControlFlowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('controlflow.ControlFlowService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ControlFlowService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PSHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/PSHeartbeat',
            master__pb2.PSHeartbeatRequest.SerializeToString,
            master__pb2.PSHeartbeatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClientHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/ClientHeartbeat',
            master__pb2.ClientHeartbeatRequest.SerializeToString,
            master__pb2.ClientHeartbeatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePushStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdatePushStatus',
            master__pb2.UpdatePushStatusRequest.SerializeToString,
            master__pb2.UpdatePushStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateComputeStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdateComputeStatus',
            master__pb2.UpdateComputeStatusRequest.SerializeToString,
            master__pb2.UpdateComputeStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryComputeStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/QueryComputeStatus',
            master__pb2.QueryComputeStatusRequest.SerializeToString,
            master__pb2.QueryComputeStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePullStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdatePullStatus',
            master__pb2.UpdatePullStatusRequest.SerializeToString,
            master__pb2.UpdatePullStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateClientCkpt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdateClientCkpt',
            master__pb2.UpdateClientCkptRequest.SerializeToString,
            master__pb2.UpdateClientCkptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateClientWeightFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdateClientWeightFactor',
            master__pb2.UpdateClientWeightFactorRequest.SerializeToString,
            master__pb2.UpdateClientWeightFactorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNormStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdateNormStatus',
            master__pb2.UpdateNormStatusRequest.SerializeToString,
            master__pb2.UpdateNormStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePSNorm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdatePSNorm',
            master__pb2.UpdatePSNormRequest.SerializeToString,
            master__pb2.UpdatePSNormResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryGlobalStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/QueryGlobalStatus',
            master__pb2.QueryGlobalStatusRequest.SerializeToString,
            master__pb2.QueryGlobalStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateMetricLine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/controlflow.ControlFlowService/UpdateMetricLine',
            master__pb2.UpdateMetricLineRequest.SerializeToString,
            master__pb2.UpdateMetricLineResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
